from _typeshed import Incomplete

def indent(s, margin): ...

class DocstringBuilder:
    DOC_WIDTH: int
    cmdName: Incomplete
    cmdInfo: Incomplete
    indentation: Incomplete
    def __init__(self, cmdName, indentation: str = ...) -> None: ...
    def startFlagSection(self) -> None: ...
    def indent(self, lines): ...
    def addFlag(self, flag, typ, shortname, descr, modes) -> None: ...
    def addFooter(self): ...
    def getTypeIdentifier(self, typ): ...
    def build(self, docstring: str, excludeFlags: Optional[Iterable[str]] = ...) -> str: ...

class RstDocstringBuilder(DocstringBuilder):
    widths: Incomplete
    altwidths: Incomplete
    rowsep: Incomplete
    headersep: Incomplete
    @staticmethod
    def section(title): ...
    @staticmethod
    def makerow(items, widths): ...
    def startFlagSection(self): ...
    def addFlag(self, flag, typ, shortname, descr, modes): ...
    def addFooter(self): ...

class NumpyDocstringBuilder(DocstringBuilder):
    DOC_WIDTH: int
    @staticmethod
    def section(title): ...
    def startFlagSection(self): ...
    def getTypeIdentifier(self, typ): ...
    def addFlag(self, flag, typ, shortname, descr, modes): ...

class PyDocstringBuilder(DocstringBuilder):
    DOC_WIDTH: int
    @staticmethod
    def section(title): ...
    def startFlagSection(self): ...
    def addFlag(self, flag, typ, shortname, descr, modes): ...
