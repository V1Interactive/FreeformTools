<!--Freeform Rigging and Animation Tools
Copyright (C) 2020  Micah Zahm

Freeform Rigging and Animation Tools is free software: you can redistribute it 
and/or modify it under the terms of the GNU General Public License as published 
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Freeform Rigging and Animation Tools is distributed in the hope that it will 
be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Freeform Rigging and Animation Tools.  
If not, see <https://www.gnu.org/licenses/>.-->

<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:v1="clr-namespace:HelixResources.Style;assembly=HelixResources" 
        xmlns:local="clr-namespace:Freeform.Rigging.ContentBrowser"
        x:Class="Freeform.Rigging.ContentBrowser.ContentBrowser"
        Closing="ContentBrowser_Closing"
        Title="{Binding WindowTitle}" 
        Height="800"
        Width="1100"
        AllowDrop="True"
        Drop="Window_Drop">
    
    <Window.Resources>
        <ResourceDictionary>
            <v1:StyleConverter x:Key="StyleConverter"/>
            <v1:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HelixResources;component/Style/V1ResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="Right" Modifiers="Alt" Command="{Binding HistoryForwardCommand}"/>
        <KeyBinding Key="Left" Modifiers="Alt" Command="{Binding HistoryBackCommand}"/>
        <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyFilePathCommand}"/>
        <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteFilePathCommand}"/>
        <KeyBinding Key="E" Modifiers="Ctrl" Command="{Binding OpenFileExplorerCommand}"/>
    </Window.InputBindings>

    <Window.CommandBindings>
        <CommandBinding Command="NavigationCommands.BrowseBack" Executed="BrowseBack_Executed"/>
        <CommandBinding Command="NavigationCommands.BrowseForward" Executed="BrowseForward_Executed"/>
    </Window.CommandBindings>

    <Grid>
        <Grid.Resources>
            <v1:BindingProxy x:Key="dataContextProxy" Data="{Binding}"/>

            <ControlTemplate x:Key="fileViewTemplate">
                <ListView HorizontalContentAlignment="Stretch" 
                          ItemsSource="{Binding ContentListViewSource.View}"
                          SelectedItem="{Binding SelectedFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          BorderBrush="{StaticResource HighlightColor}"
                          BorderThickness="2"
                          SelectionMode="Extended"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border>
                                <Border.Style>
                                    <MultiBinding Converter="{StaticResource StyleConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding RelativeSource="{RelativeSource Self}"/>
                                            <Binding Path="ViewBorderStyle"/>
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Border.Style>

                                <!--Grid used to overlay drag control ontop of visual information-->
                                <Grid Width="{Binding Data.ItemWidth, Source={StaticResource dataContextProxy}, UpdateSourceTrigger=PropertyChanged}" 
                                      Height="{Binding Data.ItemHeight, Source={StaticResource dataContextProxy}, UpdateSourceTrigger=PropertyChanged}" 
                                      HorizontalAlignment="Stretch" 
                                      VerticalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.Resources>
                                        <v1:BindingProxy x:Key="contentContextProxy" Data="{Binding}"/>
                                    </Grid.Resources>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="10*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Image Width="{Binding Data.IconWidth, Source={StaticResource dataContextProxy}, UpdateSourceTrigger=PropertyChanged}" 
                                                   Height="{Binding Data.IconHeight, Source={StaticResource dataContextProxy}, UpdateSourceTrigger=PropertyChanged}" 
                                                   Source="{Binding FileIcon, UpdateSourceTrigger=PropertyChanged}" 
                                                   Grid.Column="0"/>
                                        </Grid>

                                        <TextBlock Text="{Binding Name}" 
                                                   FontSize="{Binding Data.ItemFontSize, Source={StaticResource dataContextProxy}, UpdateSourceTrigger=PropertyChanged}" 
                                                   HorizontalAlignment="Center" 
                                                   TextAlignment="Center"
                                                   TextWrapping="Wrap"
                                                   Grid.Row="1"/>
                                    </Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="1">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="4*"/>
                                            </Grid.RowDefinitions>
                                            <Image Source="{Binding P4Icon, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="2,2" Grid.Row="0"/>
                                            <Image Source="{Binding FileStatusIcon, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="1,1" Grid.Row="1"/>
                                        </Grid>
                                    </Grid>
                                    <local:DragUserControl FilePath="{Binding ItemPath, UpdateSourceTrigger=PropertyChanged}" 
                                                           SelectedFile="{Binding Data.SelectedFile, Source={StaticResource dataContextProxy}}"
                                                           V1DoubleClick="{Binding Data.DoubleClickCommand, Source={StaticResource dataContextProxy}}"
                                                           Grid.Row="0">
                                        <local:DragUserControl.ToolTip>
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Style="{StaticResource HighlightTextBlock}" Text="{Binding ItemPath}"/>
                                                <TextBlock Style="{StaticResource HighlightTextBlock}" Text="{Binding DateModifiedString}"/>
                                            </StackPanel>
                                        </local:DragUserControl.ToolTip>
                                        <local:DragUserControl.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Open in Explorer" 
                                                          Command="{Binding Data.OpenFileExplorerCommand, Source={StaticResource dataContextProxy}}"
                                                          CommandParameter="{Binding}"/>
                                                <MenuItem Header="Exported Selected" 
                                                          Command="{Binding Data.ExportSelectedCommand, Source={StaticResource dataContextProxy}}" 
                                                          CommandParameter="{Binding ItemPath}"
                                                          Visibility="{Binding Data.IsFBX, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"
                                                          IsEnabled="{Binding Data.IsMaya, Source={StaticResource dataContextProxy}}"/>
                                                <MenuItem Header="Import and Combine" 
                                                          Command="{Binding Data.ImportCombineCommand, Source={StaticResource dataContextProxy}}" 
                                                          Visibility="{Binding Data.IsFBX, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"
                                                          IsEnabled="{Binding Data.IsMaya, Source={StaticResource dataContextProxy}}"/>
                                                <Separator Margin="0,4" 
                                                           Visibility="{Binding Data.IsFBX, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"/>
                                                <MenuItem Header="Retarget Animation" 
                                                          Command="{Binding Data.ImportRetargetCommand, Source={StaticResource dataContextProxy}}" 
                                                          CommandParameter="{Binding ItemPath}"
                                                          Visibility="{Binding Data.IsFBX, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"
                                                          IsEnabled="{Binding Data.IsMaya, Source={StaticResource dataContextProxy}}"/>

                                                <Separator Margin="0,4" 
                                                           Visibility="{Binding Data.IsFile, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"/>
                                                <MenuItem Header="Checkout" 
                                                          Command="{Binding Data.CheckoutCommand, Source={StaticResource dataContextProxy}}" 
                                                          Visibility="{Binding Data.IsFile, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"
                                                          IsEnabled="{Binding Data.PerforceEnabled, Source={StaticResource dataContextProxy}}"/>
                                                <MenuItem Header="Add" 
                                                          Command="{Binding Data.AddCommand, Source={StaticResource dataContextProxy}}"
                                                          Visibility="{Binding Data.IsFile, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"
                                                          IsEnabled="{Binding Data.PerforceEnabled, Source={StaticResource dataContextProxy}}"/>
                                                <MenuItem Header="Delete" 
                                                          Command="{Binding Data.DeleteCommand, Source={StaticResource dataContextProxy}}"
                                                          Visibility="{Binding Data.IsFile, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"
                                                          IsEnabled="{Binding Data.PerforceEnabled, Source={StaticResource dataContextProxy}}"/>
                                                <MenuItem Header="Revert" 
                                                          Command="{Binding Data.RevertCommand, Source={StaticResource dataContextProxy}}"
                                                          Visibility="{Binding Data.IsFile, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"
                                                          IsEnabled="{Binding Data.PerforceEnabled, Source={StaticResource dataContextProxy}}"/>
                                            </ContextMenu>
                                        </local:DragUserControl.ContextMenu>
                                    </local:DragUserControl>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="IsSelected" Value="{Binding Path=ViewIsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </ControlTemplate>


            <ControlTemplate x:Key="detailViewTemplate">
                <ListView HorizontalContentAlignment="Stretch" 
                          ItemsSource="{Binding ContentListViewSource.View}"
                          SelectedItem="{Binding SelectedFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          BorderBrush="{StaticResource HighlightColor}"
                          BorderThickness="2"
                          SelectionMode="Extended"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          Grid.IsSharedSizeScope="True">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border>
                                <Border.Style>
                                    <MultiBinding Converter="{StaticResource StyleConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding RelativeSource="{RelativeSource Self}"/>
                                            <Binding Path="ViewBorderStyle"/>
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Border.Style>

                                <!--Grid used to overlay drag control ontop of visual information-->
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="24"/>
                                    </Grid.RowDefinitions>
                                    <Grid.Resources>
                                        <v1:BindingProxy x:Key="contentContextProxy" Data="{Binding}"/>
                                    </Grid.Resources>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="DetailIcon"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="DetailName"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="DetailP4"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="DetailWriteable"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="DetailFileDate"/>
                                        </Grid.ColumnDefinitions>
                                        <Image Width="24" 
                                               Height="24" 
                                               Source="{Binding FileIcon, UpdateSourceTrigger=PropertyChanged}" 
                                               Margin="10,0"
                                               Grid.Column="0"/>
                                        <TextBlock Text="{Binding Name}"
                                                   HorizontalAlignment="Left" 
                                                   VerticalAlignment="Center"
                                                   TextAlignment="Left"
                                                   Margin="10,0"
                                                   Grid.Column="1"/>
                                        <Image Source="{Binding P4Icon, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                               Width="16"
                                               Margin="2" 
                                               Grid.Column="2"/>
                                        <Image Source="{Binding FileStatusIcon, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                               Width="16"
                                               Margin="2" 
                                               Grid.Column="3"/>
                                        <TextBlock Text="{Binding DateModifiedString}" 
                                                   Margin="10,0"
                                                   Grid.Column="4"/>
                                    </Grid>
                                    <local:DragUserControl FilePath="{Binding ItemPath, UpdateSourceTrigger=PropertyChanged}" 
                                                           SelectedFile="{Binding Data.SelectedFile, Source={StaticResource dataContextProxy}}"
                                                           V1DoubleClick="{Binding Data.DoubleClickCommand, Source={StaticResource dataContextProxy}}"
                                                           Grid.Row="0">
                                        <local:DragUserControl.ToolTip>
                                            <TextBlock Style="{StaticResource HighlightTextBlock}" Text="{Binding ItemPath}"/>
                                        </local:DragUserControl.ToolTip>
                                        <local:DragUserControl.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Open in Explorer" 
                                                          Command="{Binding Data.OpenFileExplorerCommand, Source={StaticResource dataContextProxy}}"
                                                          CommandParameter="{Binding}"/>
                                                <Separator Margin="0,4" 
                                                           Visibility="{Binding Data.IsFile, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"/>
                                                <MenuItem Header="Checkout" 
                                                          Command="{Binding Data.CheckoutCommand, Source={StaticResource dataContextProxy}}" 
                                                          Visibility="{Binding Data.IsFile, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"/>
                                                <MenuItem Header="Add" 
                                                          Command="{Binding Data.AddCommand, Source={StaticResource dataContextProxy}}"
                                                          Visibility="{Binding Data.IsFile, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"/>
                                                <MenuItem Header="Delete" 
                                                          Command="{Binding Data.DeleteCommand, Source={StaticResource dataContextProxy}}"
                                                          Visibility="{Binding Data.IsFile, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"/>
                                                <MenuItem Header="Revert" 
                                                          Command="{Binding Data.RevertCommand, Source={StaticResource dataContextProxy}}"
                                                          Visibility="{Binding Data.IsFile, Source={StaticResource contentContextProxy}, Converter={StaticResource booleanToVisibilityConverter}}"/>
                                            </ContextMenu>
                                        </local:DragUserControl.ContextMenu>
                                    </local:DragUserControl>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="IsSelected" Value="{Binding Path=ViewIsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </ControlTemplate>

            <ControlTemplate x:Key="uiViewTemplate">
                <Control x:Name="viewControl" Template="{StaticResource fileViewTemplate}"/>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding UseDetailView}" Value="True">
                        <Setter TargetName="viewControl" Property="Template" Value="{StaticResource detailViewTemplate}"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <Grid Style="{StaticResource V1Grid}" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Button Content="&lt;" 
                        Style="{StaticResource ForegroundButton}" 
                        Command="{Binding HistoryBackCommand}" 
                        IsEnabled="{Binding HistoryBackEnabled}" 
                        Margin="6,5" Width="20" Grid.Column="0"/>
                <Button Content="&gt;" 
                        Style="{StaticResource ForegroundButton}" 
                        Command="{Binding HistoryForwardCommand}" 
                        IsEnabled="{Binding HistoryForwardEnabled}" 
                        Margin="0,5,6,5" Width="20" Grid.Column="1"/>

                <ListView ItemsSource="{Binding SelectedDirectory.DirectoryChain, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                          VerticalAlignment="Center"
                          Grid.Column="2">

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Style="{StaticResource V1Grid}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button Content="{Binding Name}" 
                                        Style="{StaticResource ForegroundButton}" 
                                        Command="{Binding Data.SetSelectedDirectoryCommand, Source={StaticResource dataContextProxy}}" 
                                        CommandParameter="{Binding}" Margin="6,0" Grid.Column="0"/>
                                <TextBlock Text="&gt;" VerticalAlignment="Center" Grid.Column="1"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>

                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>

            <Button Content="Filter  &gt;" 
                    Style="{StaticResource ForegroundButton}" 
                    Command="{Binding OpenFilterMenuCommand}" 
                    Margin="0,5" Width="60" Grid.Column="1">
                <Button.ContextMenu>
                    <ContextMenu Style="{StaticResource V1ContextMenu}" IsOpen="{Binding Data.FilterIsOpen, Source={StaticResource dataContextProxy}}">
                        <CheckBox Style="{StaticResource V1CheckBox}" Content="Files" IsChecked="{Binding Data.FilterFiles, Source={StaticResource dataContextProxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Style="{StaticResource V1CheckBox}" Content="Folders" IsChecked="{Binding Data.FilterFolders, Source={StaticResource dataContextProxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Separator/>
                        <CheckBox Style="{StaticResource V1CheckBox}" Content=".ma" IsChecked="{Binding Data.FilterMA, Source={StaticResource dataContextProxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Style="{StaticResource V1CheckBox}" Content=".max" IsChecked="{Binding Data.FilterMAX, Source={StaticResource dataContextProxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Style="{StaticResource V1CheckBox}" Content=".fbx" IsChecked="{Binding Data.FilterFBX, Source={StaticResource dataContextProxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Separator/>
                        <CheckBox Style="{StaticResource V1CheckBox}" Content="All Image Files" IsChecked="{Binding Data.FilterAllImageFiles, Source={StaticResource dataContextProxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Style="{StaticResource V1CheckBox}" Content=".psd" IsChecked="{Binding Data.FilterPSD, Source={StaticResource dataContextProxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Style="{StaticResource V1CheckBox}" Content=".tga" IsChecked="{Binding Data.FilterTGA, Source={StaticResource dataContextProxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Style="{StaticResource V1CheckBox}" Content=".png" IsChecked="{Binding Data.FilterPNG, Source={StaticResource dataContextProxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Style="{StaticResource V1CheckBox}" Content=".jpg" IsChecked="{Binding Data.FilterJPG, Source={StaticResource dataContextProxy}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>

            <TextBox Text="{Binding FileFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,6" Grid.Column="2">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding FilterFilesCommand}"/>
                </TextBox.InputBindings>
            </TextBox>
        </Grid>

        <Grid Margin="1,0" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <v1:V1TreeView ItemsSource="{Binding RootDirectoryItems}" 
                           SelectedItem="{Binding SelectedDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <v1:V1TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type local:UserDirectory}" ItemsSource="{Binding Subfolders}">
                        <Border>
                            <Border.Style>
                                <MultiBinding Converter="{StaticResource StyleConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="BorderStyle"/>
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Border.Style>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Open in Explorer" 
                                                  Command="{Binding Data.OpenFileExplorerCommand, Source={StaticResource dataContextProxy}}"
                                                  CommandParameter="{Binding}"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                
                                
                                <Image Name="img" Width="20" Height="20" Stretch="Fill" Source="{Binding FileIcon}"/>
                                <TextBlock Text="{Binding Name}" Foreground="{StaticResource LightTextColor}" Margin="5,0" />
                            </StackPanel>
                        </Border>
                    </HierarchicalDataTemplate>
                    
                    <DataTemplate DataType="{x:Type local:UserFile}">
                        <Border>
                            <Border.Style>
                                <MultiBinding Converter="{StaticResource StyleConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="BorderStyle"/>
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Border.Style>
                            <StackPanel Orientation="Horizontal">
                                <Image Name="img" Width="20" Height="20" Stretch="Fill" Source="{Binding FileIcon}"/>
                                <TextBlock Text="{Binding Name}" Foreground="{StaticResource LightTextColor}" Margin="5,0" />
                            </StackPanel>
                        </Border>
                    </DataTemplate>

                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                     Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                     Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                                     Color="Black" />
                </v1:V1TreeView.Resources>
                <v1:V1TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Style>
                </v1:V1TreeView.ItemContainerStyle>
            </v1:V1TreeView>

            <GridSplitter Width="3" 
                          Background="{StaticResource HighlightColor}" 
                          VerticalAlignment="Stretch" 
                          HorizontalAlignment="Center"
                          Grid.Column="1"/>

            <ItemsControl Template="{StaticResource uiViewTemplate}" Grid.Column="2"/>
        </Grid>

        <Grid Margin="0,4" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Style="{StaticResource HighlightTextBlock}" Text="{Binding UserMessage}" Margin="10,0" Grid.Column="0">
                <TextBlock.ToolTip>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Style="{StaticResource HighlightTextBlock}" Text="Hotkeys:"/>
                        <TextBlock Style="{StaticResource HighlightTextBlock}" Text="Ctrl + C = Copy file/folder path to clipboard"/>
                        <TextBlock Style="{StaticResource HighlightTextBlock}" Text="Ctrl + V = Navigate to path in clipboard"/>
                        <TextBlock Style="{StaticResource HighlightTextBlock}" Text="Ctrl + E = Open folder or file in File Explorer"/>
                    </StackPanel>
                </TextBlock.ToolTip>
            </TextBlock>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Column="1">
                <TextBlock Text="Sort: " FontWeight="Bold" VerticalAlignment="Center" Margin="2,0"/>
                <RadioButton Content="Name" GroupName="Sort" VerticalAlignment="Center" IsChecked="{Binding ContentNameSort}" Margin="2,0"/>
                <RadioButton Content="Date" GroupName="Sort" VerticalAlignment="Center" IsChecked="{Binding ContentDateSort}" Margin="2,0"/>
                <RadioButton Content="Type" GroupName="Sort" VerticalAlignment="Center" IsChecked="{Binding ContentTypeSort}" Margin="2,0"/>
                <RadioButton Content="P4 Status" GroupName="Sort" VerticalAlignment="Center" IsChecked="{Binding PerforceStatusSort}" Margin="2,0,15,0"/>
            </StackPanel>
            <Slider Value="{Binding IconWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                    IsEnabled="{Binding UseDetailView, Converter={StaticResource InverseBooleanConverter}}"
                    Minimum="60" 
                    Maximum="140" 
                    TickFrequency="10" 
                    Margin="10,2"
                    Grid.Column="2"/>
            <Button Command="{Binding ChangeViewStateCommand}" 
                    Margin="0,0,10,0"
                    Grid.Column="3">
                <Image Source="{Binding FileViewIcon}"/>
            </Button>
        </Grid>
    </Grid>
</Window>
